{"version":3,"file":"static/js/650.f917c324.chunk.js","mappings":"iPACA,EAAyB,uBAAzB,EAAuD,qB,SCSjDA,EAAoC,CACxCC,MAAO,IAsDT,EAnDqC,WACnC,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAgBjB,GAAyBC,EAAAA,EAAAA,UAA8BN,GAAa,eAA7DO,EAAI,KAAEC,EAAQ,KACfC,GAAUC,EAAAA,EAAAA,KAfK,SAACC,GACpBA,EAAEC,iBACFR,EAASS,EAAAA,EAAAA,QAAAA,aAA+BN,IACrCO,SACAC,MAAK,SAACC,GACDA,EAASC,SACXf,EAAQgB,QAAQ,CACdC,SAAU,kBACVC,MAAO,CAAEC,KAAMnB,EAAQoB,WAG7B,IACCC,OAAM,WAAO,GAClB,IASA,OACE,kBAAMC,UAAS,UAAKC,GAAgB,WAClC,kBAAMD,UAAS,QAAWE,IAAKjB,EAAQ,WACrC,eAAIe,UAAW,6BAA6B,SAAC,+HAC7C,SAAC,KAAU,CACTG,WAAY,YACZC,KAAM,QACNC,MAAOtB,EAAKN,MACZ6B,SAbS,SAACnB,GAChB,MAAwBA,EAAEoB,OAAlBH,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdrB,GAAS,kBAAKD,GAAI,cAAGqB,EAAOC,IAC9B,EAWQG,YAAa,YAEf,SAAC,KAAM,CAACC,SAAU,SAAUC,KAAM,UAAWC,KAAM,QAAQ,SAAC,iFAI9D,eAAGX,UAAW,kDAAkD,UAAC,gGAE/D,SAAC,KAAI,CAACY,GAAG,SAASZ,UAAS,eAAUC,EAAW,sBAAqB,SAAC,wCAM9E,C","sources":["webpack://react-burger/./src/pages/forgot-password/styles.module.css?a47e","pages/forgot-password/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"styles_layout__2w4G5\",\"link\":\"styles_link__frWWU\"};","import { Button, EmailInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { authModel } from 'entities/auth';\n\nimport { useAppDispatch, useAppHistory, useForm } from 'shared/lib';\n\nimport styles from './styles.module.css';\n\nconst initFormData: TGetResetCodeParams = {\n  email: '',\n};\n\nconst ForgotPasswordPage: React.FC = () => {\n  const history = useAppHistory();\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = (e: SubmitEvent) => {\n    e.preventDefault();\n    dispatch(authModel.actions.getResetCode(form))\n      .unwrap()\n      .then((response) => {\n        if (response.success) {\n          history.replace({\n            pathname: '/reset-password',\n            state: { from: history.location },\n          });\n        }\n      })\n      .catch(() => {});\n  };\n  const [form, setValue] = useState<TGetResetCodeParams>(initFormData);\n  const formRef = useForm(handleSubmit);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValue({ ...form, [name]: value });\n  };\n\n  return (\n    <main className={`${styles.layout}`}>\n      <form className={`mb-20`} ref={formRef}>\n        <h1 className={'text text_type_main-medium'}>Восстановление пароля</h1>\n        <EmailInput\n          extraClass={'mt-6 mb-6'}\n          name={'email'}\n          value={form.email}\n          onChange={onChange}\n          placeholder={'E-mail'}\n        />\n        <Button htmlType={'submit'} type={'primary'} size={'large'}>\n          Восстановить\n        </Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive'}>\n        Вспомнили пароль?\n        <Link to='/login' className={`ml-2 ${styles.link} text_color_accent`}>\n          Войти\n        </Link>\n      </p>\n    </main>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["initFormData","email","history","useAppHistory","dispatch","useAppDispatch","useState","form","setValue","formRef","useForm","e","preventDefault","authModel","unwrap","then","response","success","replace","pathname","state","from","location","catch","className","styles","ref","extraClass","name","value","onChange","target","placeholder","htmlType","type","size","to"],"sourceRoot":""}