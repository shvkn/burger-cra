{"version":3,"file":"static/js/910.c1f0dcaa.chunk.js","mappings":"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","sources":["webpack://react-burger/./src/widgets/user-orders/styles.module.css?d85e","widgets/user-orders/index.tsx","webpack://react-burger/./src/features/edit-user/user-form.module.css?b051","features/edit-user/user-form.tsx","webpack://react-burger/./src/pages/profile/styles.module.css?6ed0","pages/profile/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersList\":\"styles_ordersList__LpBf-\"};","import React, { useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { authModel } from 'entities/auth';\nimport { ingredientModel } from 'entities/ingredient';\nimport { Order, ordersModel } from 'entities/order';\n\nimport { getAccessToken, useAppDispatch } from 'shared/lib';\nimport { LoadingCurtain, ModalRoute } from 'shared/ui';\n\nimport styles from './styles.module.css';\n\nexport const UserOrders: React.FC = () => {\n  const { entities: ingredientsEntities } = ingredientModel.useIngredients();\n  const { orders, isWsOpened, isWsClosed, isWsConnecting, isEmpty } = ordersModel.useOrders({\n    ingredientsEntities,\n  });\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(ingredientModel.actions.getIngredientsAsync());\n    dispatch(authModel.actions.getUser())\n      .unwrap()\n      .then(() => {\n        isWsClosed &&\n          dispatch(\n            ordersModel.actions.connect({\n              route: '/orders',\n              accessToken: getAccessToken(),\n            })\n          );\n      });\n\n    return () => {\n      isWsOpened && dispatch(ordersModel.actions.close());\n    };\n  }, [dispatch, isWsOpened, isWsClosed]);\n\n  const { url } = useRouteMatch();\n\n  if (isWsConnecting) return <LoadingCurtain />;\n  if (isEmpty) return null;\n  return (\n    <ul className={`${styles.ordersList} scroll`}>\n      {orders.map((order) => (\n        <li key={order._id} className={'mb-4 mr-2'}>\n          <ModalRoute path={`${url}/${order._id}`}>\n            <Order order={order} />\n          </ModalRoute>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttons\":\"user-form_buttons__gSasE\",\"form\":\"user-form_form__1Leyd\"};","import {\n  Button,\n  EmailInput,\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport React from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\nimport { authModel } from 'entities/auth';\n\nimport { VALIDATION_RULES } from 'shared/config';\nimport { useAppDispatch } from 'shared/lib';\n\nimport styles from './user-form.module.css';\n\nexport const UserForm: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { user } = authModel.useAuth();\n  const {\n    handleSubmit,\n    control,\n    formState: { isDirty, isValid, dirtyFields },\n    reset,\n    getValues,\n  } = useForm<Required<TPatchUserData>>({\n    defaultValues: {\n      name: user?.name,\n      email: user?.email,\n      password: '',\n    },\n  });\n\n  const onSubmit = () => {\n    const data: TPatchUserData = Object.keys(dirtyFields).reduce(\n      (acc, field) => ({\n        ...acc,\n        [field]: getValues(field as keyof TPatchUserData),\n      }),\n      {}\n    );\n    dispatch(authModel.actions.patchUser(data))\n      .unwrap()\n      .then(() => {\n        reset({}, { keepValues: true });\n      });\n  };\n\n  return (\n    <form className={`mt-20 ${styles.form}`} onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name={'name'}\n        control={control}\n        rules={VALIDATION_RULES.NAME}\n        render={({ field }) => {\n          const { ref, onBlur, ...props } = field;\n          return <Input {...props} placeholder={'Имя'} />;\n        }}\n      />\n      <Controller\n        name={'email'}\n        control={control}\n        rules={VALIDATION_RULES.EMAIL}\n        render={({ field }) => {\n          const { ref, ...props } = field;\n          return <EmailInput {...props} extraClass={'mt-6 mb-6'} placeholder={'E-mail'} />;\n        }}\n      />\n      <Controller\n        name={'password'}\n        control={control}\n        rules={VALIDATION_RULES.PASSWORD}\n        render={({ field }) => {\n          const { ref, ...props } = field;\n          return (\n            <PasswordInput\n              {...props}\n              extraClass={'mt-6'}\n              placeholder={'Пароль'}\n              icon={'EditIcon'}\n            />\n          );\n        }}\n      />\n      {isDirty && isValid && (\n        <div className={`mt-6 ${styles.buttons}`}>\n          <Button\n            htmlType={'reset'}\n            type={'secondary'}\n            onClick={() => reset({})}\n            extraClass={'ml-4'}\n          >\n            Отменить\n          </Button>\n          <Button htmlType={'submit'}>Сохранить</Button>\n        </div>\n      )}\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"styles_layout__7WFNo\",\"sidebar\":\"styles_sidebar__HxnH7\",\"content\":\"styles_content__FFDE5\",\"ordersList\":\"styles_ordersList__sG74t\",\"buttons\":\"styles_buttons__yRs3j\",\"links\":\"styles_links__WlCwG\",\"link\":\"styles_link__1YouO\",\"form\":\"styles_form__E9wlR\"};","import { clsx } from 'clsx';\nimport React from 'react';\nimport { NavLink, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport { UserOrders } from 'widgets/user-orders';\n\nimport { UserForm } from 'features/edit-user';\n\nimport styles from './styles.module.css';\n\nconst routes: ReadonlyArray<TRouteItem> = [\n  {\n    path: '',\n    title: 'Профиль',\n    exact: true,\n    sidebar: 'В этом разделе вы можете изменить свои персональные данные',\n    children: <UserForm />,\n  },\n  {\n    path: '/orders',\n    title: 'Лента заказов',\n    exact: false,\n    sidebar: 'В этом разделе вы можете просмотреть свою историю заказов',\n    children: <UserOrders />,\n  },\n  {\n    path: '/logout',\n    title: 'Выход',\n    children: <Redirect to={'/logout'} />,\n  },\n];\n\nconst ProfilePage: React.FC = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <main className={styles.layout}>\n      <div className={`mt-30 ${styles.sidebar}`}>\n        <ul className={styles.links}>\n          {routes.map((route, idx) => {\n            return (\n              <li key={idx} className={'pt-4 pb-4'}>\n                <NavLink\n                  exact={route.exact}\n                  to={`${url}${route.path}`}\n                  className={(isActive: boolean): string =>\n                    clsx(\n                      styles.link,\n                      'text text_type_main-medium',\n                      isActive ? 'text_color_primary' : 'text_color_inactive'\n                    )\n                  }\n                >\n                  {route.title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n        <Switch>\n          {routes.map((route, idx) => {\n            return route.sidebar ? (\n              <Route key={idx} exact={route.exact} path={`${url}${route.path}`}>\n                <p className={`mt-20 text text_type_main-default text_color_inactive`}>\n                  {route.sidebar}\n                </p>\n              </Route>\n            ) : null;\n          })}\n        </Switch>\n      </div>\n      <div className={`ml-15 mt-10 ${styles.content}`}>\n        <Switch>\n          {routes.map((route, idx) => {\n            return route.children ? (\n              <Route key={idx} exact={route.exact} path={`${url}${route.path}`}>\n                {route.children}\n              </Route>\n            ) : null;\n          })}\n        </Switch>\n      </div>\n    </main>\n  );\n};\n\nexport default ProfilePage;\n"],"names":["UserOrders","ingredientsEntities","ingredientModel","entities","ordersModel","orders","isWsOpened","isWsClosed","isWsConnecting","isEmpty","dispatch","useAppDispatch","useEffect","authModel","unwrap","then","route","accessToken","getAccessToken","url","useRouteMatch","className","styles","map","order","path","_id","UserForm","user","useForm","defaultValues","name","email","password","handleSubmit","control","formState","isDirty","isValid","dirtyFields","reset","getValues","onSubmit","data","Object","keys","reduce","acc","field","keepValues","rules","VALIDATION_RULES","render","props","ref","onBlur","placeholder","extraClass","icon","htmlType","type","onClick","routes","title","exact","sidebar","children","to","idx","isActive","clsx"],"sourceRoot":""}