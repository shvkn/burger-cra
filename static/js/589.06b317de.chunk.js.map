{"version":3,"file":"static/js/589.06b317de.chunk.js","mappings":"qQACA,EAAyB,uBAAzB,EAAuD,qB,SCUjDA,EAAqC,CAAEC,SAAU,GAAIC,MAAO,IAwElE,EAtEoC,WAAO,IAAD,IACxC,GAAyBC,EAAAA,EAAAA,UAA+BH,GAAa,eAA9DI,EAAI,KAAEC,EAAQ,KACfC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MACTC,EAAUC,EAAAA,EAAAA,UAAVD,MAEFE,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdX,GAAS,kBAAKD,GAAI,cAAGW,EAAOC,IAC9B,EAaMC,GAAUC,EAAAA,EAAAA,KAXK,SAACL,GACpBA,EAAEM,iBACFX,EAASG,EAAAA,EAAAA,QAAAA,cAAgCP,IACtCgB,SACAC,MAAK,YAAU,EAAPC,SAELhB,EAAQiB,QAAQ,CAAEC,SAAU,UAEhC,GACJ,IAIMC,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,QAAIhB,IACUiB,EAAAA,EAAAA,IAAgBjB,KACbkB,EAAAA,GAAAA,qBAGnB,GAAG,CAAClB,IAEJ,MAA+C,sBAArB,QAAtB,EAAAJ,EAAQuB,SAASC,aAAK,OAAM,QAAN,EAAtB,EAAwBC,YAAI,WAAN,EAAtB,EAA8BP,WACzB,SAAC,KAAQ,CAACQ,GAAG,OAIpB,kBAAMC,UAAS,gBAAWC,GAAgB,WACxC,kBAAMD,UAAS,QAAWE,IAAKlB,EAAQ,WACrC,eAAIgB,UAAW,6BAA6B,SAAC,+HAC7C,SAAC,KAAa,CACZG,WAAY,YACZrB,KAAM,WACNC,MAAOZ,EAAKH,SACZW,SAAUA,EACVyB,YAAa,oHAEf,SAAC,KAAK,CACJD,WAAY,YACZrB,KAAM,QACNC,MAAOZ,EAAKF,MACZU,SAAUA,EACVyB,YAAa,kHACb3B,MAAOe,EACPa,UAAW,8GAEb,SAAC,KAAM,CAACC,SAAU,SAAUC,KAAM,UAAWC,KAAM,QAAQ,SAAC,+DAI9D,eAAGR,UAAW,kDAAkD,UAAC,gGAE/D,SAAC,KAAI,CAACD,GAAG,SAASC,UAAS,eAAUC,EAAW,sBAAqB,SAAC,wCAM9E,C","sources":["webpack://react-burger/./src/pages/reset-password/styles.module.css?34e6","pages/reset-password/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"styles_layout__k5DjU\",\"link\":\"styles_link__1xmcN\"};","import { Button, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { useMemo, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { authModel } from 'entities/auth';\n\nimport { Messages } from 'shared/config';\nimport { getErrorMessage, useAppDispatch, useAppHistory, useForm } from 'shared/lib';\n\nimport styles from './styles.module.css';\n\nconst initFormData: TResetPasswordParams = { password: '', token: '' };\n\nconst ResetPasswordPage: React.FC = () => {\n  const [form, setValue] = useState<TResetPasswordParams>(initFormData);\n  const history = useAppHistory();\n  const dispatch = useAppDispatch();\n  const { error } = authModel.useAuth();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValue({ ...form, [name]: value });\n  };\n\n  const handleSubmit = (e: SubmitEvent) => {\n    e.preventDefault();\n    dispatch(authModel.actions.resetPassword(form))\n      .unwrap()\n      .then(({ success }) => {\n        if (success) {\n          history.replace({ pathname: '/login' });\n        }\n      });\n  };\n\n  const formRef = useForm(handleSubmit);\n\n  const isIncorrectToken = useMemo(() => {\n    if (error) {\n      const msg = getErrorMessage(error);\n      return msg === Messages.INCORRECT_RESET_TOKEN;\n    }\n    return false;\n  }, [error]);\n\n  if (history.location.state?.from?.pathname !== '/forgot-password') {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <main className={`mt-30 ${styles.layout}`}>\n      <form className={`mb-20`} ref={formRef}>\n        <h1 className={'text text_type_main-medium'}>Восстановление пароля</h1>\n        <PasswordInput\n          extraClass={'mt-6 mb-6'}\n          name={'password'}\n          value={form.password}\n          onChange={onChange}\n          placeholder={'Введите новый пароль'}\n        />\n        <Input\n          extraClass={'mt-6 mb-6'}\n          name={'token'}\n          value={form.token}\n          onChange={onChange}\n          placeholder={'Введите код из письма'}\n          error={isIncorrectToken}\n          errorText={'Введен неверный код'}\n        />\n        <Button htmlType={'submit'} type={'primary'} size={'large'}>\n          Сохранить\n        </Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive'}>\n        Вспомнили пароль?\n        <Link to='/login' className={`ml-2 ${styles.link} text_color_accent`}>\n          Войти\n        </Link>\n      </p>\n    </main>\n  );\n};\n\nexport default ResetPasswordPage;\n"],"names":["initFormData","password","token","useState","form","setValue","history","useAppHistory","dispatch","useAppDispatch","error","authModel","onChange","e","target","name","value","formRef","useForm","preventDefault","unwrap","then","success","replace","pathname","isIncorrectToken","useMemo","getErrorMessage","Messages","location","state","from","to","className","styles","ref","extraClass","placeholder","errorText","htmlType","type","size"],"sourceRoot":""}