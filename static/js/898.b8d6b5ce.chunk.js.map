{"version":3,"file":"static/js/898.b8d6b5ce.chunk.js","mappings":"gMACA,EAA4B,0BAA5B,EAA4E,oCAA5E,EAAgI,8BAAhI,EAA4K,4BAA5K,EAAqN,2B,SCWxMA,EAAuC,SAAH,GAAuC,IAAD,IAAhCC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAC9DC,GAAiBC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,IAAQL,GAAQ,YAAS,SAANM,MAAmB,GAAC,GAAE,CAACN,IAE/E,OAASG,GACP,iBAAKI,UAAS,qBAAgBC,GAAmB,WAC/C,iBAAKD,UAAWC,EAA2B,WACzC,4BACE,eAAID,UAAW,mCAAmC,SAAC,2CACnD,eAAIA,UAAWC,EAAqB,SACX,QADW,EACjCL,EAAqB,YAAC,aAAtB,EAAwBM,MAAM,EAAG,IAAIC,KAAI,SAACC,GAAK,OAC9C,eAAuBJ,UAAS,oBAAeC,GAAqB,UAClE,cAAGD,UAAS,mDAAqD,SAAEI,EAAMC,UADlED,EAAMC,OAEV,UAIX,iBAAKL,UAAW,OAAO,WACrB,eAAIA,UAAW,8BAA8B,SAAC,kDAC9C,eAAIA,UAAWC,EAAqB,SACR,QADQ,EACjCL,EAAwB,eAAC,aAAzB,EAA2BM,MAAM,EAAG,IAAIC,KAAI,SAACC,GAAK,OACjD,eAAuBJ,UAAS,oBAAeC,GAAqB,UAClE,cAAGD,UAAS,gCAAkC,SAAEI,EAAMC,UAD/CD,EAAMC,OAEV,aAKb,eAAIL,UAAS,oCAAsC,SAAC,4HACpD,cAAGA,UAAS,sCAAiCC,GAAoB,SAAEP,KACnE,eAAIM,UAAS,oCAAsC,SAAC,qHACpD,cAAGA,UAAS,sCAAiCC,GAAoB,SAAEN,OAEnE,IACN,E,wCC5CA,EAAyB,uBAAzB,EAA0H,0BAA1H,EAAiK,2BCyDjK,EA5C2B,WACzB,MAIIW,EAAAA,GAAAA,iBAHFC,EAAW,EAAXA,YACAC,EAAS,EAATA,UACUC,EAAmB,EAA7BC,SAGF,EACEC,EAAAA,GAAAA,UAAsB,CAAEF,oBAAAA,IADlBhB,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYiB,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAAYC,EAAc,EAAdA,eAAgBC,EAAO,EAAPA,QAErEC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAGR,OAFAF,EAASV,EAAAA,GAAAA,QAAAA,uBACTO,GAAcG,EAASL,EAAAA,GAAAA,QAAAA,QAA4B,CAAEQ,MAAO,iBACrD,WACLP,GAAcI,EAASL,EAAAA,GAAAA,QAAAA,QACzB,CACF,GAAG,CAACK,EAAUJ,EAAYC,EAAYN,EAAaC,IACnD,IAAQY,GAAQC,EAAAA,EAAAA,MAARD,IAER,OAAIN,GAAuB,SAAC,KAAc,IACtCC,EAAgB,MAGlB,iBAAMf,UAAWC,EAAc,UAC7B,iCACE,iBAAKD,UAAWC,EAAiB,WAC/B,eAAID,UAAS,wCAA0C,SAAC,+EACxD,eAAIA,UAAS,UAAKC,EAAiB,WAAU,SAC1CR,EAAOU,KAAI,SAACC,GAAK,OAChB,eAAoBJ,UAAW,YAAY,UACzC,SAAC,IAAU,CAACsB,KAAI,UAAKF,EAAG,YAAIhB,EAAMmB,KAAM,UACtC,SAAC,KAAK,CAACnB,MAAOA,EAAOoB,YAAU,OAF1BpB,EAAMmB,IAIV,UAIX,SAAC/B,EAAS,CAACC,OAAQA,EAAQC,MAAOA,EAAOC,WAAYA,QAI7D,C","sources":["webpack://react-burger/./src/widgets/dashboard/styles.module.css?a8c2","widgets/dashboard/index.tsx","webpack://react-burger/./src/pages/feed/styles.module.css?1754","pages/feed/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dashboard\":\"styles_dashboard__huSw7\",\"dashboardOrdersList\":\"styles_dashboardOrdersList__FSmtu\",\"ordersNumbers\":\"styles_ordersNumbers__q-NbG\",\"orderNumber\":\"styles_orderNumber__sxMh4\",\"textShadow\":\"styles_textShadow__IUUg9\"};","import React, { useMemo } from 'react';\n\nimport { groupBy } from 'shared/lib';\n\nimport styles from './styles.module.css';\n\ntype TDashboardProps = {\n  orders: Array<Omit<TOrder, 'ingredients'> & { ingredients: TIngredient[] }>;\n  total: number;\n  totalToday: number;\n};\n\nexport const Dashboard: React.FC<TDashboardProps> = ({ orders, total, totalToday }) => {\n  const ordersByStatus = useMemo(() => groupBy(orders, ({ status }) => status), [orders]);\n\n  return !!ordersByStatus ? (\n    <div className={`ml-9 mt-25 ${styles.dashboard}`}>\n      <div className={styles.dashboardOrdersList}>\n        <div>\n          <h3 className={'mb-6 text text_type_main-default'}>Готовы:</h3>\n          <ul className={styles.ordersNumbers}>\n            {ordersByStatus['done']?.slice(0, 20).map((order) => (\n              <li key={order.number} className={`mb-2 ml-8 ${styles.orderNumber}`}>\n                <p className={`text text_type_digits-default text_color_success`}>{order.number}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={'ml-9'}>\n          <h3 className={'text text_type_main-default'}>В работе:</h3>\n          <ul className={styles.ordersNumbers}>\n            {ordersByStatus['pending']?.slice(0, 20).map((order) => (\n              <li key={order.number} className={`mb-2 ml-8 ${styles.orderNumber}`}>\n                <p className={`text text_type_digits-default`}>{order.number}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <h3 className={`mt-15 text text_type_main-default`}>Выполнено за все время:</h3>\n      <p className={`text text_type_digits-large ${styles.textShadow}`}>{total}</p>\n      <h3 className={`mt-15 text text_type_main-default`}>Выполнено за сегодня:</h3>\n      <p className={`text text_type_digits-large ${styles.textShadow}`}>{totalToday}</p>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"styles_layout__ZPt8A\",\"feed\":\"styles_feed__v05f0\",\"message\":\"styles_message__EODOO\",\"container\":\"styles_container__5iRVz\",\"ordersList\":\"styles_ordersList__Zn1cR\"};","import React, { useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { Dashboard } from 'widgets/dashboard';\n\nimport { ingredientModel } from 'entities/ingredient';\nimport { Order, ordersModel } from 'entities/order';\n\nimport { useAppDispatch } from 'shared/lib';\nimport { LoadingCurtain } from 'shared/ui';\nimport { ModalRoute } from 'shared/ui/modal-route';\n\nimport styles from './styles.module.css';\n\nconst FeedPage: React.FC = () => {\n  const {\n    isSucceeded,\n    isLoading,\n    entities: ingredientsEntities,\n  } = ingredientModel.useIngredients();\n\n  const { orders, total, totalToday, isWsOpened, isWsClosed, isWsConnecting, isEmpty } =\n    ordersModel.useOrders({ ingredientsEntities });\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(ingredientModel.actions.getIngredientsAsync());\n    isWsClosed && dispatch(ordersModel.actions.connect({ route: '/orders/all' }));\n    return () => {\n      isWsOpened && dispatch(ordersModel.actions.close());\n    };\n  }, [dispatch, isWsOpened, isWsClosed, isSucceeded, isLoading]);\n  const { url } = useRouteMatch();\n\n  if (isWsConnecting) return <LoadingCurtain />;\n  if (isEmpty) return null;\n\n  return (\n    <main className={styles.layout}>\n      <>\n        <div className={styles.container}>\n          <h2 className={`mt-10 mb-5 text text_type_main-medium`}>Лента заказов</h2>\n          <ul className={`${styles.ordersList} scroll`}>\n            {orders.map((order) => (\n              <li key={order._id} className={'mb-4 mr-2'}>\n                <ModalRoute path={`${url}/${order._id}`}>\n                  <Order order={order} hideStatus />\n                </ModalRoute>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <Dashboard orders={orders} total={total} totalToday={totalToday} />\n      </>\n    </main>\n  );\n};\n\nexport default FeedPage;\n"],"names":["Dashboard","orders","total","totalToday","ordersByStatus","useMemo","groupBy","status","className","styles","slice","map","order","number","ingredientModel","isSucceeded","isLoading","ingredientsEntities","entities","ordersModel","isWsOpened","isWsClosed","isWsConnecting","isEmpty","dispatch","useAppDispatch","useEffect","route","url","useRouteMatch","path","_id","hideStatus"],"sourceRoot":""}