{"version":3,"file":"static/js/274.f3a92924.chunk.js","mappings":"iPACA,EAAyB,uBAAzB,EAAuD,qB,SCcjDA,EAAgC,CACpCC,KAAM,GACNC,MAAO,GACPC,SAAU,IA0DZ,EAvDmC,WACjC,OAAyBC,EAAAA,EAAAA,UAA0BJ,GAAa,eAAzDK,EAAI,KAAEC,EAAQ,KACfC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBV,EAAI,EAAJA,KAAMW,EAAK,EAALA,MACdN,GAAS,kBAAKD,GAAI,cAAGJ,EAAOW,IAC9B,EAOMC,GAAUC,EAAAA,EAAAA,KALK,SAACJ,GACpBA,EAAEK,iBACFR,EAASS,EAAAA,EAAAA,QAAAA,SAA2BX,GACtC,IAIA,OACE,kBAAMY,UAAS,UAAKC,GAAgB,WAClC,kBAAMD,UAAS,QAAWE,IAAKN,EAAQ,WACrC,eAAII,UAAW,6BAA6B,SAAC,wEAC7C,SAAC,KAAK,CACJG,WAAY,YACZnB,KAAM,OACNW,MAAOP,EAAKJ,KACZQ,SAAUA,EACVY,YAAa,wBAEf,SAAC,KAAU,CACTD,WAAY,YACZnB,KAAM,QACNW,MAAOP,EAAKH,MACZO,SAAUA,EACVY,YAAa,YAEf,SAAC,KAAa,CACZD,WAAY,YACZnB,KAAM,WACNW,MAAOP,EAAKF,SACZM,SAAUA,EACVY,YAAa,0CAEf,SAAC,KAAM,CAACC,SAAU,SAAUC,KAAM,UAAWC,KAAM,QAAQ,SAAC,qHAI9D,eAAGP,UAAW,kDAAkD,UAAC,wHAE/D,SAAC,KAAI,CAACQ,GAAG,SAASR,UAAS,eAAUC,EAAW,sBAAqB,SAAC,wCAM9E,C","sources":["webpack://react-burger/./src/pages/registration/styles.module.css?166d","pages/registration/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"styles_layout__tkTW-\",\"link\":\"styles_link__WlJqG\"};","import {\n  Button,\n  EmailInput,\n  Input,\n  PasswordInput,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { authModel } from 'entities/auth';\n\nimport { useAppDispatch, useForm } from 'shared/lib';\n\nimport styles from './styles.module.css';\n\nconst initFormData: TRegisterParams = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationPage: React.FC = () => {\n  const [form, setValue] = useState<TRegisterParams>(initFormData);\n  const dispatch = useAppDispatch();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValue({ ...form, [name]: value });\n  };\n\n  const handleSubmit = (e: SubmitEvent) => {\n    e.preventDefault();\n    dispatch(authModel.actions.register(form));\n  };\n\n  const formRef = useForm(handleSubmit);\n\n  return (\n    <main className={`${styles.layout}`}>\n      <form className={`mb-20`} ref={formRef}>\n        <h1 className={'text text_type_main-medium'}>Регистрация</h1>\n        <Input\n          extraClass={'mt-6 mb-6'}\n          name={'name'}\n          value={form.name}\n          onChange={onChange}\n          placeholder={'Имя'}\n        />\n        <EmailInput\n          extraClass={'mt-6 mb-6'}\n          name={'email'}\n          value={form.email}\n          onChange={onChange}\n          placeholder={'E-mail'}\n        />\n        <PasswordInput\n          extraClass={'mt-6 mb-6'}\n          name={'password'}\n          value={form.password}\n          onChange={onChange}\n          placeholder={'Пароль'}\n        />\n        <Button htmlType={'submit'} type={'primary'} size={'large'}>\n          Зарегистрироваться\n        </Button>\n      </form>\n      <p className={'text text_type_main-default text_color_inactive'}>\n        Уже зарегистрированы?\n        <Link to='/login' className={`ml-2 ${styles.link} text_color_accent`}>\n          Войти\n        </Link>\n      </p>\n    </main>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["initFormData","name","email","password","useState","form","setValue","dispatch","useAppDispatch","onChange","e","target","value","formRef","useForm","preventDefault","authModel","className","styles","ref","extraClass","placeholder","htmlType","type","size","to"],"sourceRoot":""}