{"version":3,"file":"static/js/817.7015bb71.chunk.js","mappings":"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","sources":["../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts","../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts","../node_modules/react-dnd-html5-backend/src/NativeTypes.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts","../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts","../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts","../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts","../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts","../node_modules/react-dnd-html5-backend/src/OptionsReader.ts","../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts","../node_modules/react-dnd-html5-backend/src/index.ts","../node_modules/dnd-core/src/utils/js_utils.ts","../node_modules/dnd-core/src/actions/dragDrop/types.ts","../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts","../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts","../node_modules/dnd-core/src/actions/dragDrop/drop.ts","../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts","../node_modules/dnd-core/src/utils/matchesType.ts","../node_modules/dnd-core/src/actions/dragDrop/hover.ts","../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts","../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts","../node_modules/dnd-core/src/actions/dragDrop/index.ts","../node_modules/dnd-core/src/utils/coords.ts","../node_modules/dnd-core/src/utils/dirtiness.ts","../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts","../node_modules/@react-dnd/asap/src/makeRequestCall.ts","../node_modules/@react-dnd/asap/src/AsapQueue.ts","../node_modules/@react-dnd/asap/src/RawTask.ts","../node_modules/@react-dnd/asap/src/TaskFactory.ts","../node_modules/@react-dnd/asap/src/asap.ts","../node_modules/dnd-core/src/actions/registry.ts","../node_modules/dnd-core/src/interfaces.ts","../node_modules/dnd-core/src/contracts.ts","../node_modules/dnd-core/src/utils/getNextUniqueId.ts","../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts","../node_modules/dnd-core/src/utils/equality.ts","../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts","../node_modules/dnd-core/src/reducers/dragOffset.ts","../node_modules/dnd-core/src/reducers/dragOperation.ts","../node_modules/dnd-core/src/reducers/refCount.ts","../node_modules/dnd-core/src/reducers/stateId.ts","../node_modules/dnd-core/src/reducers/index.ts","../node_modules/dnd-core/src/createDragDropManager.ts","../node_modules/react-dnd/src/core/DndProvider.tsx"],"sourcesContent":["// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n","import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n","import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n","export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n","export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n","import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n","import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n","import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n","export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n","import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n","import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n","import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n","// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n","import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n","import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n","import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n","import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n","import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n","import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n","import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n","import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n","export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n","let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n","import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n","import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n","import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n","import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n","import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n"],"names":["memoize","fn","result","EnterLeaveCounter","isNodeInDocument","entered","this","enteringNode","previousLength","length","itemsA","itemsB","set","Set","insertItem","item","add","forEach","key","push","union","filter","node","contains","leavingNode","items","i","NativeDragSource","config","initializeExposedProperties","Object","keys","exposeProperties","property","defineProperty","configurable","enumerable","get","console","warn","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","monitor","handle","getSourceId","FILE","URL","TEXT","HTML","getDataFromDataTransfer","typesToTry","defaultValue","reduce","resultSoFar","typeToTry","getData","nativeTypesConfig","NativeTypes","files","Array","prototype","slice","call","html","urls","split","text","matchNativeItemType","dataTransferTypes","types","nativeItemType","typeConfig","some","t","indexOf","isFirefox","test","navigator","userAgent","isSafari","Boolean","window","safari","MonotonicInterpolant","xs","ys","indexes","sort","a","b","dx","dy","dys","dxs","ms","c1s","m2","mNext","dxNext","common","m","c2s","c3s","c1","invDx","x","mid","low","high","xHere","Math","floor","diff","max","diffSq","ELEMENT_NODE","getNodeClientOffset","el","nodeType","parentElement","getBoundingClientRect","top","left","y","getEventClientOffset","e","clientX","clientY","getDragPreviewOffset","sourceNode","dragPreview","clientOffset","anchorPoint","offsetPoint","isImage","document","nodeName","documentElement","isImageNode","dragPreviewNodeOffsetFromClient","offsetFromDragPreview","sourceWidth","offsetWidth","sourceHeight","offsetHeight","anchorX","anchorY","dragPreviewWidth","width","dragPreviewHeight","height","devicePixelRatio","getDragPreviewSize","offsetX","offsetY","isManualOffsetY","interpolate","calculateYOffset","OptionsReader","globalContext","options","ownerDocument","optionsArgs","ref","rootElement","HTML5BackendImpl","manager","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","getSourceClientOffset","sourceId","source","endDragNativeItem","isDraggingNativeItem","actions","endDrag","registry","removeSource","body","endDragIfSourceWasRemovedFromDOM","clearCurrentDragSourceNode","isDragging","cancelHover","scheduleHover","requestAnimationFrame","hover","cancelAnimationFrame","handleTopDragStartCapture","handleTopDragStart","defaultPrevented","beginDrag","publishSource","nativeType","setDragImage","getCurrentSourcePreviewNodeOptions","dragPreviewOffset","setData","err","setCurrentDragSourceNode","target","captureDraggingState","publishDragSource","setTimeout","beginDragNativeItem","hasAttribute","preventDefault","handleTopDragEndCapture","handleTopDragEnterCapture","loadDataTransfer","enterLeaveCounter","enter","handleTopDragEnter","altKey","targetId","canDropOnTarget","dropEffect","getCurrentDropEffect","handleTopDragOverCapture","handleTopDragOver","handleTopDragLeaveCapture","leave","handleTopDropCapture","reset","handleTopDrop","drop","handleSelectStart","dragDrop","tagName","isContentEditable","getActions","getMonitor","getRegistry","ref1","size","root","undefined","__isReactDndBackendSetUp","Error","addEventListeners","removeEventListeners","delete","handleDragStart","setAttribute","addEventListener","removeEventListener","handleDragEnter","handleDragOver","handleDrop","_objectSpread","getCurrentSourceNodeOptions","itemType","getItemType","type","createNativeDragSource","addSource","clearTimeout","unshift","_e","HTML5Backend","context","isObject","input","INIT_COORDS","BEGIN_DRAG","PUBLISH_DRAG_SOURCE","HOVER","DROP","END_DRAG","setClientOffset","sourceClientOffset","payload","ResetCoordinatesAction","createBeginDrag","sourceIds","dispatch","invariant","getSource","verifyInvariants","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","verifyItemIsObject","pinSource","getSourceType","isSourcePublic","createDrop","didDrop","targetIds","getTargetIds","reverse","getDroppableTargets","index","dropResult","getTarget","verifyDropResultType","getDropResult","determineDropResult","action","createEndDrag","verifyIsDragging","unpinSource","matchesType","targetType","draggedItemType","isArray","createHover","targetIdsArg","verifyTargetIdsIsArray","getTargetType","splice","removeNonMatchingTargetIds","lastIndexOf","checkInvariants","hoverAllTargets","createPublishDragSource","DragDropManagerImpl","store","isSetUp","handleRefCountChange","shouldSetUp","getState","refCount","backend","setup","teardown","subscribe","createDragDropActions","boundActions","actionCreator","args","apply","subtract","NONE","ALL","__IS_NONE__","__IS_ALL__","DragDropMonitorImpl","listener","handlerIds","prevStateId","stateId","state","currentStateId","canSkipListener","dirtyIds","areDirty","dirtyHandlerIds","previousState","dragOffset","nextState","canDrag","canDrop","shallow","dragOperation","initialClientOffset","initialSourceClientOffset","getDifferenceFromInitialOffset","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","makeRequestCall","toggle","observer","createTextNode","observe","characterData","data","AsapQueue","queue","pendingErrors","flushing","capacity","flush","q","currentIndex","scan","newLength","registerPendingError","requestErrorThrow","requestFlush","shift","task","RawTask","onError","release","error","TaskFactory","freeTasks","tasks","pop","asapQueue","taskFactory","HandlerRole","ADD_SOURCE","ADD_TARGET","REMOVE_SOURCE","REMOVE_TARGET","validateType","allowArray","SOURCE","TARGET","nextUniqueId","getNextHandlerId","role","id","toString","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","next","done","HandlerRegistryImpl","dragSources","dropTargets","pinnedSourceId","pinnedSource","validateSourceContract","addHandler","validateTargetContract","addTarget","handler","includePinned","isSourceId","isTargetId","enqueueTask","create","removeTarget","strictEquality","prevTargetIds","has","count","xor","didChange","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","initialState","offsetA","offsetB","obj","path","c","createDragDropManager","backendFactory","backendOptions","debugMode","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","name","instanceId","makeStoreInstance","receiveBackend","INSTANCE_SYM","Symbol","for","DndProvider","memo","_param","children","props","dragDropManager","getGlobalContext","ctx","createSingletonDndContext","isGlobalInstance","getDndContextValue","useEffect","_jsx","DndContext"],"sourceRoot":""}