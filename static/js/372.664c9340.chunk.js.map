{"version":3,"file":"static/js/372.664c9340.chunk.js","mappings":"wOACA,EAAyB,uB,SC0CzB,EA/BgC,WAC9B,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,UAAAA,kBAC5BC,GAAaF,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,UAAAA,mBAElCE,EAAAA,EAAAA,YAAU,WAIR,OAHAN,EAASO,EAAAA,GAAAA,QAAAA,uBACTF,GACEL,EAASI,EAAAA,GAAAA,QAAAA,QAA4B,CAAEI,MAAO,UAAWC,aAAaC,EAAAA,EAAAA,SACjE,WACLR,GAAcF,EAASI,EAAAA,GAAAA,QAAAA,QACzB,CACF,GAAG,CAACJ,EAAUK,EAAYH,IAC1B,IAAQS,EAAaJ,EAAAA,GAAAA,iBAAbI,SAEFC,GAAQC,EAAAA,EAAAA,IAAYT,EAAAA,GAAAA,UAAAA,WAAiCN,IAC3D,OAAOc,GACL,iBAAME,UAAS,gBAAWC,GAAgB,UACxC,UAAC,KAAa,YACZ,SAAC,YAAoB,WACnB,cAAGD,UAAW,gCAAgC,oBAAMF,EAAMI,aAE5D,SAAC,aAAqB,WACpB,SAAC,KAAS,CAACJ,MAAOA,EAAOK,iBATR,SAACL,GAAa,OAAKM,EAAAA,EAAAA,IAAoBN,EAAOD,EAAU,WAa7E,IACN,C","sources":["webpack://react-burger/./src/pages/user-order/styles.module.css?a628","pages/user-order/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"styles_layout__yAgdf\"};","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { ingredientModel } from 'entities/ingredient';\nimport { OrderInfo, ordersModel } from 'entities/order';\n\nimport { getAccessToken, getOrderIngredients, useAppDispatch, useAppSelector } from 'shared/lib';\nimport { DetailsLayout } from 'shared/ui';\n\nimport styles from './styles.module.css';\n\nconst UserOrderPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useAppDispatch();\n  const isWsOpened = useAppSelector(ordersModel.selectors.selectIsWSOpened);\n  const isWsClosed = useAppSelector(ordersModel.selectors.selectIsWSClosed);\n\n  useEffect(() => {\n    dispatch(ingredientModel.actions.getIngredientsAsync());\n    isWsClosed &&\n      dispatch(ordersModel.actions.connect({ route: '/orders', accessToken: getAccessToken() }));\n    return () => {\n      isWsOpened && dispatch(ordersModel.actions.close());\n    };\n  }, [dispatch, isWsClosed, isWsOpened]);\n  const { entities } = ingredientModel.useIngredients();\n  const mapIngredientsFn = (order: TOrder) => getOrderIngredients(order, entities);\n  const order = useSelector(ordersModel.selectors.selectById(id));\n  return order ? (\n    <main className={`mt-30 ${styles.layout}`}>\n      <DetailsLayout>\n        <DetailsLayout.Header>\n          <p className={'text text_type_digits-default'}>{`#${order.number}`}</p>\n        </DetailsLayout.Header>\n        <DetailsLayout.Content>\n          <OrderInfo order={order} mapIngredientsFn={mapIngredientsFn} />\n        </DetailsLayout.Content>\n      </DetailsLayout>\n    </main>\n  ) : null;\n};\n\nexport default UserOrderPage;\n"],"names":["id","useParams","dispatch","useAppDispatch","isWsOpened","useAppSelector","ordersModel","isWsClosed","useEffect","ingredientModel","route","accessToken","getAccessToken","entities","order","useSelector","className","styles","number","mapIngredientsFn","getOrderIngredients"],"sourceRoot":""}